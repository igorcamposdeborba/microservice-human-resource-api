spring.application.name=hr-worker

# Porta aleatoria
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Registrar-se no eureka-server para ele pegar o nome e a porta para mapear para o gateway chamar pelo nome do projeto e não pela porta
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Prometheus: metricas da saude da aplicacao
management.endpoints.web.exposure.include=info, health, metrics, prometheus

# Swagger: exposicao de endpoints e documentacao
springdoc.swagger-ui.path=/swagger-ui.html

# Actuator: auxilia a export metricas da saude da aplicacao
springdoc.show-actuator=true

# Prometheus: ver metricas
management.metrics.export.prometheus.enabled=true

#RabbitMQ: Mensagens entre microsservicos
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=${spring.rabbitmq.username}
spring.rabbitmq.password=${spring.rabbitmq.password}